#!/usr/bin/python3.6

# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.


import json
import os
import logging
log = logging.getLogger('werkzeug')
log.setLevel(logging.ERROR)

import flask
from flask import Flask
from flask import jsonify

app = Flask(__name__)
curr_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)),'mock_data')
api = "api"

@app.route('/{0}/login/<loginhash>'.format(api), methods=["GET"])
def login(loginhash):
    login_file_path = "{0}/login.txt".format(curr_dir)
    login_file = open(login_file_path, "r")
    login_data = login_file.read()
    login_file.close()
    json_data = json.loads(login_data)
    status_code = json_data.get("status_code", 200)
    response = json_data.get("api-response", {})
    return response, status_code

@app.route('/{0}/show/disks/detail'.format(api), methods=["GET"])
def show_disks_detail():
    api_file = open("{0}/disks-detail.txt".format(curr_dir), "r")
    data = api_file.read()
    api_file.close()
    json_data = json.loads(data)
    status_code = json_data.get("status_code")
    response = json_data.get("api-response")
    return response, status_code

@app.route('/{0}/show/disks/<diskId>/detail'.format(api), methods=["GET"])
def show_single_disk_detail(diskId):
    api_file = open("{0}/disks-detail.txt".format(curr_dir), "r")
    data = api_file.read()
    api_file.close()
    json_data = json.loads(data)
    status_code = json_data.get("status_code")
    response = json_data.get("api-response")
    new_drives = []
    for d in response["drives"]:
        if d["durable-id"] == "disk_0{}".format(diskId):
            new_drives.append(d)
    response["drives"] = new_drives
    return response, status_code

@app.route('/{0}/show/volumes/pool/<pool_serial_number>'.format(api), methods=["GET"])
def show_volumes(pool_serial_number):
    api_file = open("{0}/volumes.txt".format(curr_dir), "r")
    data = api_file.read()
    api_file.close()
    json_data = json.loads(data)
    status_code = json_data.get("status_code")
    response = json_data.get("api-response")
    return response, status_code

# Generic function to serve all api /show/<endpoint> endpoints
# It reads data from file with a name same as endpoint.
@app.route('/{0}/show/<endpoint>'.format(api), methods=["GET"])
def show_data(endpoint):
    endpoint = endpoint.replace("/","-")
    api_file = open("{0}/{1}.txt".format(curr_dir, endpoint), "r")
    data = api_file.read()
    api_file.close()
    json_data = json.loads(data)
    status_code = json_data.get("status_code")
    response = json_data.get("api-response")
    return response, status_code


if __name__ == '__main__':
    app.run("127.0.0.1", 28200, True)
