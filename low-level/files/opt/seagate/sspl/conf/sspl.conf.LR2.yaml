# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

# Version 2.0.0

# TODO: Rename limit_consul_memory to limit_persistent_memory_use
# and move it to DATASTORE

SSPL_LL_SETTING:
   sensors:
      - DiskMonitor
      - ServiceMonitor
      - RAIDsensor
      - RAIDIntegritySensor
      - NodeData
      - RealStorFanSensor
      - RealStorPSUSensor
      - RealStorControllerSensor
      - RealStorDiskSensor
      - RealStorSideplaneExpanderSensor
      - RealStorLogicalVolumeSensor
      - IEMSensor
      - NodeHWsensor
      - RealStorEnclosureSensor
      - SASPortSensor
      - MemFaultSensor
      - CPUFaultSensor
   actuators:
      - Service
      - RAIDactuator
      - Smartctl
      - NodeHWactuator
      - RealStorActuator

INGRESSPROCESSOR:
   consumer_id: sspl_actuator
   consumer_group: cortx_monitor
   message_type: requests
   offset: latest

EGRESSPROCESSOR:
   message_signature_username: sspl-ll
   message_signature_token: ALOIUD986798df69a8koDISLKJ282983
   message_signature_expires: 3600
   limit_consul_memory: 50000000
   producer_id: sspl-sensor
   message_type: alerts
   method: sync

NODEDATAMSGHANDLER:
   transmit_interval: 10
   high_cpu_usage_wait_threshold: 30
   high_memory_usage_wait_threshold: 30
   units: MB
   disk_usage_threshold: 80
   cpu_usage_threshold: 80
   host_memory_usage_threshold: 80

RAIDSENSOR:
   monitor: true
   threaded: true
   RAID_status_file: /proc/mdstat

RAIDINTEGRITYSENSOR:
   monitor: true
   threaded: true
   polling_interval: 1209600

IPMI:
   user: admin
   pass: gAAAAABgEnOnRAhNzFyATr3iZdoC_tCeqEBqnwFb7CNYVXhd6i3Pl93Il7aDsG0Ro5ZRRaXr2LUPQEse46NVlDTAK7gbzoxGyg==

BMC_INTERFACE:
   default: system

REALSTORSENSORS:
   monitor: true
   polling_frequency: 30
   polling_frequency_override: 0

REALSTORPSUSENSOR:
   threaded: true
   polling_frequency_override: 0

REALSTORFANSENSOR:
   threaded: true
   polling_frequency_override: 0

REALSTORCONTROLLERSENSOR:
   threaded: true
   polling_frequency_override: 0

REALSTORDISKSENSOR:
   threaded: true
   polling_frequency_override: 0

REALSTORSIDEPLANEEXPANDERSENSOR:
   threaded: true
   polling_frequency_override: 0

NODEHWSENSOR:
   monitor: true
   threaded: true
   polling_interval: 30

REALSTORLOGICALVOLUMESENSOR:
   threaded: true
   # Polling frequency override here applicable for both Disk Group & Logical Volume monitoring
   polling_frequency_override: 10

REALSTORENCLOSURESENSOR:
   threaded: true
   polling_frequency_override: 0

IEMSENSOR:
   threaded: true
   log_file_path: /var/log/cortx/iem/iem_messages
   timestamp_file_path: /var/cortx/sspl/data/iem/last_processed_msg_time

DISKMONITOR:
   monitor: true
   threaded: true
   smart_test_interval: 999999999
   run_smart_on_start: 'False'

SERVICEMONITOR:
   monitor: true
   threaded: true
   thread_sleep: 1
   polling_frequency: 15
   threshold_inactive_time: 180
   monitored_services:
      - hare-consul-agent.service
      - hare-consul-agent-c1.service
      - hare-consul-agent-c2.service
      - elasticsearch.service
      - multipathd.service
      - statsd.service
      - rsyslog.service
      - haproxy.service
      - slapd.service
      - lnet.service
      - salt-master.service
      - salt-minion.service
      - glusterd.service
      - scsi-network-relay.service
      - kafka.service
      - kafka-zookeeper.service

NODEHWACTUATOR:
   ipmi_client: ipmitool

DATASTORE:
   store_type: file
   consul_host: 127.0.0.1
   consul_port: 8500

SASPORTSENSOR:
   monitor: true
   threaded: true
   probe: sysfs

MEMFAULTSENSOR:
   monitor: true
   threaded: true
   probe: sysfs

CPUFAULTSENSOR:
   monitor: true
   threaded: true
   probe: sysfs

STORAGE_ENCLOSURE:
   mgmt_interface: cliapi

SYSTEM_INFORMATION:
   cli_type: CS-A
   data_path: /var/cortx/sspl/data/
   sspl_log_file_path: /var/log/cortx/sspl/sspl.log
   log_level: INFO
   environment: PROD
   sysfs_base_path: /sys/
   sspl_state: active

# NOTE: Keys present in OBSOLETE section are out of date
# and will be removed in furture version. Keys present in
# CHANGED are keys replaced, existing values are moved
# to new keys.

OBSOLETE:
CHANGED:
