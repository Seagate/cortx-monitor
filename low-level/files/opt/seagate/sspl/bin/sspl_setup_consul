#!/bin/bash

# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

set -e -u -o pipefail

############################################################################
# This script performs following operations.
# - If consul found, use existing consul from CONSUL_PATH
# - If consul not found, creates consul binary in CONSUL_PATH and runs agent
############################################################################

SCRIPT_DIR=$(dirname $0)
# Import common constants
. $SCRIPT_DIR/constants.sh
SCRIPT_NAME=$(basename $0)

mkdir -p $CONSUL_PATH


usage() {
    cat << EOF
$SCRIPT_NAME [[-e <DEV|PROD>]
    -e Environment
EOF
    exit 1
}

while getopts ":e:" OPTION; do
    case $OPTION in
        e )
            ENVIRONMENT=$OPTARG
            ;;
        * )
            usage
            ;;
    esac
done

if ! [ -x "$(command -v $CONSUL_PATH/consul)" ]; then
    # For Dev environment, install consul
    if [ "$ENVIRONMENT" == 'DEV' ]; then
        if ! [ -x "$(command -v wget)" ]; then
            yum install -y wget
        fi
        curl -O https://releases.hashicorp.com/consul/1.7.0/consul_1.7.0_linux_amd64.zip
        if ! [ -x "$(command -v unzip)" ]; then
            yum install -y unzip
        fi
        unzip consul_1.7.0_linux_amd64.zip
        rm -rf consul_1.7.0_linux_amd64.zip
        mv ./consul $CONSUL_PATH
    fi

    if ! [ -x "$(command -v $CONSUL_PATH/consul)" ]; then
        echo "Consul is not available, exiting..";
        exit 1
    fi

    # Invoke consul agent from fallback path
    CONSUL_PS=$(ps -aux | grep "consul" | grep -v "grep" | grep -v "bash" || true)
    [ -z "$CONSUL_PS" ] &&
        $CONSUL_PATH/consul agent -dev -config-file=$SSPL_BASE_DIR/low-level/files/opt/seagate/sspl/bin/consul_config.json &>/dev/null &

    TRIES=0
    while [ -z "$CONSUL_PS" ]; do
        sleep 2
        TRIES=$((TRIES+1))
        CONSUL_PS=$(ps -aux | grep "consul" | grep -v "grep" | grep -v "bash" || true)
        if [ $TRIES -gt 5 ]; then
            echo "Consul service is not started or not recognized by SSPL setup"
            break
        fi
    done

    # TODO:
    # This setup consul script should support on joining another node(s) and form a consul cluster
fi
