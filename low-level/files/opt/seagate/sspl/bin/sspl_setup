#!/bin/bash

set -e -u -o pipefail

######################################################################
# This script serves as an entry point for various operations for SSPL
# as needed by provisioner.
######################################################################

SCRIPT_NAME=$(basename $0)
SCRIPT_DIR=$(dirname $0)
. $SCRIPT_DIR/constants.sh

SSPL_CONFIGURED="/var/$PRODUCT_FAMILY/sspl/sspl-configured"
REPLACEMENT_NODE_ENV_VAR_FILE="/etc/profile.d/set_replacement_env.sh"

usage() {
    cat << EOF
$SCRIPT_NAME [post_install[-p <EES>]|init [-dp] [-r <ssu|gw|cmu|vm>]|config [-f] [-r <ssu|gw|cmu|vm>]|test [self|sanity]|reset [hard -p <EES>|soft]]
init options:
    -dp Create configured datapath
    -r  Role to be configured on the current node
config options:
    -f  Force reinitialization. Do not prompt
    -r  Role to be configured on the current node
post_install options:
    -p Product to be configured
reset options:
    -p product to be configured
EOF
    exit 1
}

cmd=
[ $# -ge 1 ] && cmd=$1 && shift 1

case $cmd in
    post_install )
        $SCRIPT_DIR/sspl_post_install $*
        exit $?
        ;;

    init )
        $SCRIPT_DIR/sspl_setup_init $*
        exit $?
        ;;

    config )
        $SCRIPT_DIR/sspl_config $*
        exit $?
        ;;

    test )
        $SCRIPT_DIR/sspl_test $*
        exit $?
        ;;

    support_bundle )
        $SCRIPT_DIR/sspl_bundle_generate $*
        exit $?
        ;;

    reset )
        $SCRIPT_DIR/sspl_reset $*
        exit $?
        ;;

    check )
        sudo python3 $SCRIPT_DIR/validate_consul_config.py

        # Check if sspl-configured file exists at /var/cortx/sspl location.
        # If not, then check if its a replaced node by checking existence of
        # a file /etc/profile.d/set_replacement_env.sh. If its a replaced
        # node, this file will be present. Otherwise, this file will not be
        # present on the system.
        [ -f $SSPL_CONFIGURED ] && exit $? || {

            [[ -f $REPLACEMENT_NODE_ENV_VAR_FILE ]] && {

                # Its a replaced node..Create that file and exit successfully
                sudo touch $SSPL_CONFIGURED && exit $?
            }
        }
        # sspl-configured file is not present and its not a replaced node either
        # Log the error and exit.
        logger -i -p local3.err "SSPL is not configured. Run provisioner scripts in $SSPL_BASE_DIR/bin."
        exit 1
        ;;

    * )
        usage
        ;;
esac
