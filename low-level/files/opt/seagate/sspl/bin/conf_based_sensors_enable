#!/bin/bash
set -e -u -o pipefail

to_lower_case() {
    tr '[:upper:]' '[:lower:]'
}

declare -a sed_expr=(-e '/^\[[A-Z]\+\]$/h')

default_storage_type="virtual"
default_server_type="virtual"
storage_type="$(consul kv get sspl/config/SYSTEM_INFORMATION/storage_type 2>/dev/null)"
[ -z "$storage_type" ] && storage_type=$default_storage_type
server_type="$(consul kv get sspl/config/SYSTEM_INFORMATION/server_type 2>/dev/null)"
[ -z "$server_type" ] && server_type=$default_server_type

declare -A monitor=(
    [REALSTORSENSORS]="true"
    [NODEHWSENSOR]="true"
    [SYSTEMDWATCHDOG]="true" # This is the 'server disks' sensor
    [RAIDSENSOR]="true"
    [SASPORTSENSOR]="true"
    [MEMFAULTSENSOR]="true"
    [CPUFAULTSENSOR]="true"

)

case "${storage_type}" in
    virtual)
        monitor[REALSTORSENSORS]="false"
        ;;
    jbod)
        monitor[REALSTORSENSORS]="false"
        ;;
esac

case "${server_type}" in
    virtual)
        monitor[NODEHWSENSOR]="false"
        monitor[SASPORTSENSOR]="false"
        monitor[MEMFAULTSENSOR]="false"
        monitor[CPUFAULTSENSOR]="false"
        monitor[RAIDSENSOR]="false"
        ;;
esac

for group in "${!monitor[@]}"; do
    # We remove comments after the value since those are improperly parsed by the ConfigReader
    # in sspl_test.
    sed_expr+=(-e '/^monitor=.*$/{ x ; /^\['"${group}"'\]$/{ x ; s/^monitor=.*$/monitor='"${monitor[${group}]}"'/;  b} ; x }')
done


[ -f "${SSPL_CONF}" ] && {
    sed -i "${sed_expr[@]}" $SSPL_CONF
}
for group in "${!monitor[@]}"; do
    ${CONSUL_PATH}/consul kv put sspl/config/"${group}"/monitor "${monitor["${group}"]}"
done

file_store_config_path="/opt/seagate/${PRODUCT_FAMILY}/sspl/sspl_test/conf/sspl_tests.conf"
[ -f "${file_store_config_path}" ] && {
    sed -i "${sed_expr[@]}" $file_store_config_path
}

