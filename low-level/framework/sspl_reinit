#!/bin/bash

# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>. For any questions
# about this software or licensing, please email opensource@seagate.com or
# cortx-questions@seagate.com.

#
# Perform initializations prior to starting sspl_ll
#
# Create sspl-ll user and assign to groups
#
# Usage:
#    ./sspl_reinit <product>
#
script_dir=$(realpath $(dirname $0)/..)
# Import common constants
. $script_dir/files/opt/seagate/sspl/bin/constants.sh

[ "${1}" = "CS-L" -o "${1}" = "CS-G" ] && {
    id -u sspl-ll &>/dev/null || /usr/sbin/useradd \
        -s /sbin/nologin  \
        -c "User account to run the sspl-ll service" sspl-ll;

    # Automatically install dependencies based on config file
    sspl-ll-cli verify --checkdeps --autoinstall;
    exit;
}

chown -R sspl-ll:root /opt/seagate/$PRODUCT_FAMILY/sspl

# Create a link to low-level cli for easy global access
if [ -f /opt/seagate/$PRODUCT_FAMILY/sspl/low-level/cli/sspl_ll_cli ]; then
    ln -sf /opt/seagate/$PRODUCT_FAMILY/sspl/low-level/cli/sspl_ll_cli /usr/bin/sspl_ll_cli
fi

# Assign the required groups
usermod -a -G systemd-journal sspl-ll
usermod -a -G dialout sspl-ll
usermod -a -G disk sspl-ll
usermod -a -G disk sspl-ll

# Update the sudoers file with the sspl-ll user and available commands
SUDO_LINE="sspl-ll	ALL = NOPASSWD: /usr/sbin/smartctl, /usr/sbin/mdadm, /usr/bin/mount, /usr/bin/umount, /usr/sbin/swapon, /usr/sbin/swapoff, /usr/sbin/hdparm, /usr/bin/systemctl, /usr/sbin/wbcli, /usr/bin/ipmitool, /usr/bin/systemd-detect-virt, /bin/salt-call, /bin/tee, /usr/bin/facter, /usr/bin/provisioner"
echo "$SUDO_LINE" | tee /etc/sudoers.d/sspl > /dev/null
chmod 440 /etc/sudoers.d/sspl
# Set noop = true in puppet conf file to avoid the sspl auth file getting
# removed by puppet-agent (Ref: LRL-495)
PUPPET_CONF="/etc/puppetlabs/puppet/puppet.conf"
[ -f $PUPPET_CONF ] && {
    PUPPET_NOOP="noop = true"
    grep -q "$PUPPET_NOOP" $PUPPET_CONF || echo "$PUPPET_NOOP" >> $PUPPET_CONF
}

# Automatically install dependencies based on config file
# There is no --checkdeps and --autoinstall implemented in sspl-ll-cli.
#sspl-ll-cli --checkdeps --autoinstall

# Comment out the tty requirement in sudoers file
sed -i "s/^Defaults    requiretty.*/#Defaults    requiretty/" /etc/sudoers

# Start with a clean updated drive_manager.json file and serialized dir
rm -Rf /tmp/dcs/dmreport

# Grant IO abilities so that we can send ATA commands to drives as sspl-ll user
setcap cap_sys_rawio=ep /usr/bin/python2.7

# Make sure security policies are in place
cp -f /opt/seagate/$PRODUCT_FAMILY/sspl/low-level/files/etc/polkit-1/rules.d/sspl-ll_dbus_policy.rules /etc/polkit-1/rules.d
cp -f /opt/seagate/$PRODUCT_FAMILY/sspl/low-level/files/etc/dbus-1/system.d/sspl-ll_dbus_policy.conf /etc/dbus-1/system.d

mkdir -p /etc/sspl-ll/templates/snmp
cp -rf /opt/seagate/$PRODUCT_FAMILY/sspl/low-level/snmp/* /etc/sspl-ll/templates/snmp

rm -Rf /var/run/sspl_ll
