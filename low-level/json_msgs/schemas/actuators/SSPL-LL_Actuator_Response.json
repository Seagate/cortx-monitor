{
	"$schema": "http://json-schema.org/draft-03/schema#",
	"id": "http://json-schema.org/draft-03/schema#",

	"type": "object",
	"properties": {
		"username": {
			"description": "Username who generated message",
			"type": "string",
			"required": true
		},
		"signature": {
			"description": "Authentication signature of message",
			"type": "string",
			"required": true
		},
		"time": {
			"description": "The time the signature was generated",
			"type": "string",
			"required": true
		},
		"expires": {
			"description": "The number of seconds the signature remains valid after being generated",
			"type": "integer",
			"required": false
		},

		"message": {
			"type": "object",
			"required": true,
			"properties": {
				"sspl_ll_msg_header": {
					"required": true,
					"schema_version": {
						"description": "SSPL JSON Schema Version",
						"type": "string",
						"required": true
					},
					"sspl_version": {
						"description": "SSPL Version",
						"type": "string",
						"required": true
					},
					"msg_version": {
						"description": "Message Version",
						"type": "string",
						"required": true
					},
					"uuid": {
						"description": "Universally Unique ID of message",
						"type": "string",
						"required": false
					}
				},

				"actuator_response_type": {
					"type": "object",
					"required": true,
					"properties": {

						"ack": {
							"type": "object",
							"properties": {
								"ack_type": {
									"description": "Identify the type of acknowledgement",
									"type": "string",
									"required": true
								},
                                "error_no": {
                                    "description": "Error number if actuator is busy or throwing error",
                                    "type": "integer",
                                    "required": false
                                },
								"ack_msg": {
									"if":{
										"properties":{
											"Msg":{
												"message":{
													"ack":{"ack_type":{
														"SMART_TEST":{}
															}
													}
												}
											}
										}
									},
									"then":{
										"properties": {
											"description": "Message describing acknowledgement",
											"type": "string",
											"required": true
												}
										},
									"else":{
										"description": "Message describing acknowledgement",
										"type": "object",
										"required": true
										}
									}
								}
						},
						"thread_controller": {
							"type": "object",
							"properties": {
								"module_name": {
									"description": "Identify the module to be managed by its class name",
									"type": "string",
									"required": true
								},
								"thread_response": {
									"description": "Response from action applied: start | stop | restart | status",
									"type": "string",
									"required": true
								},
								"ack_type": {
									"description": "Optional ack Parameters",
									"type": "string",
									"required": false
								}
							}
						},

						"service_controller": {
							"type": "object",
							"properties": {
								"service_name": {
									"description": "Identify the service to be managed",
									"type": "string",
									"required": true
								},
								"service_response": {
									"description": "Response from action applied: start | stop | restart | status",
									"type": "string",
									"required": true
								}
							}
						},
						"host_id": {
							"description": "Host ID of node.",
							"type": "string",
							"required": false
						},
						"alert_type": {
							"description": "Sensor Response Type.",
							"type": "string",
							"required": false
						},
						"instance_id": {
							"description": "Instance ID which will be map with Resource ID.",
							"type": "string",
							"required": false
						},
						"severity": {
							"description": "The degree of impact an event has on the operation of a component.",
							"type": "string",
							"required": false
						},
						"info": {
							"type": "object",
							"properties": {
								"site_id": {
									"description": "A number that uniquely identifies a single data center site.",
									"type": "string",
									"required": true
								},
								"rack_id": {
									"description": "A numerical value that identifies a single Rack in a single site.",
									"type": "string",
									"required": true
								},
								"node_id": {
									"description": "A numerical value that indicates type of node in cluster. i.e 1-Motr,2-GW in CORTX.",
									"type": "string",
									"required": true
								},
								"resource_type": {
									"description": "Enclosure resource type like FRU, Sensor.",
									"type": "string",
									"required": true
								},
								"resource_id": {
									"description": "FRU's Resource Id.",
									"type": "string",
									"required": false
								},
								"event_time": {
									"description": "Time of fetch data from IPMI. Required only for node hw actuator",
									"type": "string",
									"required": false
								},
								"event_time": {
									"description": "Time of fetched data using IPMI.",
									"type": "string",
									"required": false
								}
							}
						},
						"if": {
						  	"properties": {
								"info": {
							  		"properties": {
										"resource_id": {
								  			"const": "*"
										}
							  		}
								}
						  	}
						},
						"then": {
						  	"properties": {
								"specific_info": {
							  		"description": "Specific dynamically generated information of FRU's.",
							  		"type": "array",
							  		"required": false
								}
						  	}
						},
						"else": {
						  	"properties": {
								"specific_info": {
							  		"description": "Specific dynamically generated information of FRU's.",
									"type": "object",
									"required": false
								}
						  	}
						}
					}
				}
			}
		}
	}
}
